info:
  version: "v1.0"
  title: UTM DMP TCL4 CON
  description: Data model for CON submission.
  contact:
    name: 'NASA Ames Research Center, Aviation Systems Division'
    url: 'https://utmregistry.arc.nasa.gov/'
    email: jaewoo.jung@nasa.gov
  license:
    name: NASA Open Source Agreement
    url: 'https://ti.arc.nasa.gov/opensource/nosa/'
  termsOfService: >-
    A. No Warranty: THE SUBJECT SOFTWARE IS PROVIDED \"AS IS\" WITHOUT ANY
    WARRANTY OF ANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING,
    BUT NOT LIMITED TO, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL CONFORM TO
    SPECIFICATIONS, ANY IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
    PARTICULAR PURPOSE, OR FREEDOM FROM INFRINGEMENT, ANY WARRANTY THAT THE
    SUBJECT SOFTWARE WILL BE ERROR FREE, OR ANY WARRANTY THAT DOCUMENTATION, IF
    PROVIDED, WILL CONFORM TO THE SUBJECT SOFTWARE. THIS AGREEMENT DOES NOT, IN
    ANY MANNER, CONSTITUTE AN ENDORSEMENT BY GOVERNMENT AGENCY OR ANY PRIOR
    RECIPIENT OF ANY RESULTS, RESULTING DESIGNS, HARDWARE, SOFTWARE PRODUCTS OR
    ANY OTHER APPLICATIONS RESULTING FROM USE OF THE SUBJECT SOFTWARE. FURTHER,
    GOVERNMENT AGENCY DISCLAIMS ALL WARRANTIES AND LIABILITIES REGARDING
    THIRD-PARTY SOFTWARE, IF PRESENT IN THE ORIGINAL SOFTWARE, AND DISTRIBUTES
    IT \"AS IS.\"


    B. Waiver and Indemnity: RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS
    AGAINST THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS
    WELL AS ANY PRIOR RECIPIENT. IF RECIPIENT''S USE OF THE SUBJECT SOFTWARE
    RESULTS IN ANY LIABILITIES, DEMANDS, DAMAGES, EXPENSES OR LOSSES ARISING
    FROM SUCH USE, INCLUDING ANY DAMAGES FROM PRODUCTS BASED ON, OR RESULTING
    FROM, RECIPIENT''S USE OF THE SUBJECT SOFTWARE, RECIPIENT SHALL INDEMNIFY
    AND HOLD HARMLESS THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND
    SUBCONTRACTORS, AS WELL AS ANY PRIOR RECIPIENT, TO THE EXTENT PERMITTED BY
    LAW. RECIPIENT''S SOLE REMEDY FOR ANY SUCH MATTER SHALL BE THE IMMEDIATE,
    UNILATERAL TERMINATION OF THIS AGREEMENT.

swagger: '2.0'

paths:
  '/no-paths':
    put:
      responses:
        '410':
          description: >-
            Gone. Not implemented. Will not be implemented. Path included for
            proper use by automated tooling.  Tools sometimes do not like
            when there are no paths, but domains do not contain paths.

definitions:
  ConPreRunRange:
    type: object
    required:
      - "metaDataTestSite"
      - "wxOperatingPoints"
      - "cellCoverageAreas"
      - "flightTestRangePolygonPoints"
    properties:
      metaDataTestSite:
        $ref: 'https://raw.githubusercontent.com/nasa/utm-docs/release-v1.0.6/TCL4%20Data%20Management/utm-tcl4-dmp-common.yaml#/definitions/MetaDataTestSite'
      flightTestRangePolygonPoints:
        description: >-
          Ordered list of the vertices of the polygon that defines the area of the test range.

          Must be a simple polygon (non-intersecting).

          First point and last point must be equal, thus closing the polygon.

          Polygon need not be convex.

          Report at least seven decimal degrees. (deg).
        $ref: '#/definitions/LatLonAltArray'
      wxOperatingPoints:
        $ref: '#/definitions/LatLonAltArray'
      cellCoverageAreas:
        description: >-
          For each provider of cell coverage that may be used by a UA in this
          run, provide polygons describing coverage area and dead zones.
        type: array
        items:
          $ref: '#/definitions/cellCoverageArea'
        minItems: 1
        maxItems: 4
      facilityMapReference:
        description: >-
          If a facility map is used as part of the scenario, provide a reference
          to that facility map.  This may be a link to the facility map or its
          data definition.  If the facility map is not an operational FAA map,
          then this may be a pointer to other documentation or data for the
          facility map.

          Note this is an optional field in this model description since it is
          not relevant to every scenario/run.  This field is REQUIRED when the
          scenario/run references/uses a facility map.
        type: string
        maxLength: 2000

  ConPreRunOp:
    type: object
    required:
      - "metaData"
      - "safeLandingLocations"
      - "safeLandingLocationPolygonPoints"
      - "rpicLocations"
      - "distressBroadcastRate"
    properties:
      metaData:
        $ref: 'https://raw.githubusercontent.com/nasa/utm-docs/release-v1.0.6/TCL4%20Data%20Management/utm-tcl4-dmp-common.yaml#/definitions/metaData'
      plannedBvlosLandingPoints:
        $ref: '#/definitions/LatLonAltArray'
      plannedVlosLandingPoints:
        $ref: '#/definitions/LatLonAltArray'
      plannedRooftopLandingPoints:
        $ref: '#/definitions/LatLonAltArray'
      safeLandingLocations:
        $ref: '#/definitions/LatLonAltArray'
      safeLandingLocationPolygonPoints:
        $ref: '#/definitions/LatLonAltArray'
      rpicLocations:
        $ref: '#/definitions/LatLonAltArray'
      distressBroadcastRate:
         description: >-
           Report configured distress broadcast rate. (Hz)
         type: number
         format: float

  ConActualLanding:
    description: >-
      "Actual landing point that occurred during a (call_sign,test_run)
      pair.  Submit data to this end-point as soon as vehicle lands.  Specify
      the three required booleans (is BVLOS? is Rooftop? is Nominal?)."
    type: object
    required:
      - "metaData"
      - "timestamp"
      - "latLonAlt"
      - "landingOffset"
      - "isBVLOS"
      - "isRooftop"
      - "isNominal"
    properties:
      metaData:
        $ref: 'https://raw.githubusercontent.com/nasa/utm-docs/release-v1.0.6/TCL4%20Data%20Management/utm-tcl4-dmp-common.yaml#/definitions/metaData'
      timestamp:
        $ref: 'https://raw.githubusercontent.com/nasa/utm-docs/release-v1.0.6/TCL4%20Data%20Management/utm-tcl4-dmp-common.yaml#/definitions/timestamp'
      latLonAlt:
        $ref: '#/definitions/LatLonAlt'
      landingOffset:
        description: >-
          lateral distance between planned landing point and
          actual landing point using vehicle independent GNSS or non-GNSS systems.
          Could use tape to measure the center-to-center distance between the points
          on the ground.
        type: number
      isBVLOS:
        description: >-
          Was this landing beyond the visual sight of its operator?
          If so, indicate true here.  Otherwise indicate false.
        type: boolean
      isRooftop:
        description: >-
          Was this landing on top of a building?  If so, indicate true.
          Otherwise, indicate false.
        type: boolean
      isNominal:
        description: >-
          Was this landing as planned (either pre-flight or dynamically updated
          within flight) or within the scope of an announced contingency plan?
          If so, indicate true here.  Otherwise indicate false.
        type: boolean

  ConWxOperatingPointData:
    description: >-
           Temperature, air pressure (in Hg), windspeed (ft/sec), wind direction,
           location, and timestamp associated with the measurement from a vehicle
    type: object
    required:
      - "metaData"
      - "timestamp"
      - "location"
    properties:
      metaData:
        description: >-
          Metadata corresponding to the vehicle that is taking the weather measurements.
        $ref: 'https://raw.githubusercontent.com/nasa/utm-docs/release-v1.0.6/TCL4%20Data%20Management/utm-tcl4-dmp-common.yaml#/definitions/metaData'
      timestamp:
        $ref: 'https://raw.githubusercontent.com/nasa/utm-docs/release-v1.0.6/TCL4%20Data%20Management/utm-tcl4-dmp-common.yaml#/definitions/timestamp'
      temperature:
        description: >-
          Degrees Fahrenheit
        type: number
        format: float
      pressure:
        description: >-
          Inches Of Hg
        type: number
        format: float
      windSpeed:
        description: >-
          Feet Per Second
        type: number
        format: float
        minimum: 0.0
      windDir:
        description: >-
          Degrees, True North Reference Frame
        type: number
        minimum:  0.0
        maximum:  360
        exclusiveMinimum: false
        exclusiveMaximum: true
      location:
        $ref: '#/definitions/LatLonAlt'

  ConWxOperatingPointDataStation:
    description: >-
           Temperature, air pressure (in Hg), windspeed (ft/sec), wind direction,
           location, and timestamp associated with the measurement from weather station
    type: object
    required:
      - "metaDataTestSite"
      - "timestamp"
      - "temperature"
      - "pressure"
      - "windSpeed"
      - "windDir"
      - "location"
    properties:
      metaDataTestSite:
        $ref: 'https://raw.githubusercontent.com/nasa/utm-docs/release-v1.0.6/TCL4%20Data%20Management/utm-tcl4-dmp-common.yaml#/definitions/MetaDataTestSite'
      timestamp:
        $ref: 'https://raw.githubusercontent.com/nasa/utm-docs/release-v1.0.6/TCL4%20Data%20Management/utm-tcl4-dmp-common.yaml#/definitions/timestamp'
      temperature:
        description: >-
          Degrees Fahrenheit
        type: number
        format: float
      pressure:
        description: >-
          Inches Of Hg
        type: number
        format: float
      windSpeed:
        description: >-
          Feet Per Second
        type: number
        format: float
        minimum: 0.0
      windDir:
        description: >-
          Degrees, True North Reference Frame
        type: number
        minimum:  0.0
        maximum:  360
        exclusiveMinimum: false
        exclusiveMaximum: true
      location:
        $ref: '#/definitions/LatLonAlt'
        
  CellServiceAvailability:
    description: >-
      Real-time availability of cellular service onboard the ownship during the
      flight.  Report at least at 1Hz sampling frequency or higher.  Report one
      of the following:
        - Connected to Cell Service
        - Not Connected to Cell Service
    type: object
    required:
      - "metaData"
      - "cellServiceAvailabilityValue"
      - "timestamp"
    properties:
      metaData:
        $ref: 'https://raw.githubusercontent.com/nasa/utm-docs/release-v1.0.6/TCL4%20Data%20Management/utm-tcl4-dmp-common.yaml#/definitions/metaData'
      cellServiceAvailabilityValue:
        type: string
        enum:
          - CONNECTED
          - NOT_CONNECTED
      timestamp:
        $ref: 'https://raw.githubusercontent.com/nasa/utm-docs/release-v1.0.6/TCL4%20Data%20Management/utm-tcl4-dmp-common.yaml#/definitions/timestamp'

  DistressV2V:
    description: >-
      This is the UTC time when a UA declares distress/clear to V2V or
      V2surrounding.
    type: object
    required:
      - metaData
      - distressV2V
      - timestamp
    properties:
      metaData:
        $ref: 'https://raw.githubusercontent.com/nasa/utm-docs/release-v1.0.6/TCL4%20Data%20Management/utm-tcl4-dmp-common.yaml#/definitions/metaData'
      distressV2V:
        type: string
        enum:
          - DISTRESS
          - CLEAR
      timestamp:
        $ref: 'https://raw.githubusercontent.com/nasa/utm-docs/release-v1.0.6/TCL4%20Data%20Management/utm-tcl4-dmp-common.yaml#/definitions/timestamp'

  RpicConstraintMessage:
    description: >-
      An instance of this model is required every time RPIC receives a
      constraint message of any kind (likely a UVR) OR some action (by RPIC or
      the UA) is taken based on receiving such a constraint.
    type: object
    required:
      - metaData
      - rpicValue
      - timestamp
    properties:
      metaData:
        $ref: 'https://raw.githubusercontent.com/nasa/utm-docs/release-v1.0.6/TCL4%20Data%20Management/utm-tcl4-dmp-common.yaml#/definitions/metaData'
      rpicValue:
        type: string
        enum:
         - RECEIVES_USS_CONSTRAINT_MESSAGE
         - RPIC_INITIATE_MANEUVER
         - UAS_RECEIVES_MANEUVER_COMMAND
      timestamp:
        $ref: 'https://raw.githubusercontent.com/nasa/utm-docs/release-v1.0.6/TCL4%20Data%20Management/utm-tcl4-dmp-common.yaml#/definitions/timestamp'


##
# shared definitions
##

  latitude:
    description: >-
      The numeric value of the latitude. Note that min and max values are added as a sanity check.
    type: number
    format: double
    minimum: -90.0
    maximum: 90.0
  longitude:
    description: >-
      The numeric value of the longitude. Note that min and max values are added as a sanity check.
    type: number
    format: double
    minimum: -180.0
    maximum: 180.0
  altitude:
    description: >-
      The numeric value of the altitude. Note that min and max values are added as a sanity check. unit in feet.
    type: number
    format: double
    minimum: -8000.0
    exclusiveMinimum: false
    maximum: 100000.0
    exclusiveMaximum: false

  LatLonAlt:
    description: >-
      Latitude and Longitude should have precision of 7 or more digits. position WGS84 altitude. (ft)
    type: object
    required: ['lat','lon','alt']
    properties:
      lat:
        $ref: '#/definitions/latitude'
      lon:
        $ref: '#/definitions/longitude'
      alt:
       $ref: '#/definitions/altitude'

  LatLon:
    description: >-
      Latitude and Longitude should have precision of 7 or more digits.
    type: object
    required: ['lat','lon']
    properties:
      lat:
        $ref: '#/definitions/latitude'
      lon:
        $ref: '#/definitions/longitude'

  LatLonAltArray:
    description: >-
      Array of (lat,lon,alt) tuples.

      If used to describe a Polygon, the first point and the last point must
      be equal.
    type: array
    items:
      $ref: '#/definitions/LatLonAlt'
    minItems: 1

  LatLonArray:
    description: >-
      Array of (lat,lon) tuples.

      If used to describe a Polygon, the first point and the last point must
      be equal.
    type: array
    items:
      $ref: '#/definitions/LatLon'
    minItems: 1

  cellCoverageArea:
    description: >-
      Mapping of cellular coverage and known dead zones within the test site
      operating area. Coverage availability must be checked by the same type of
      cell/LTE device that is installed on UA. That is, this device should be
      able to connect to service within coverage area, and not be able to
      connect to service within dead zone area. Ensure that the service provider
      for elements cellCoverageArea and cellServiceAvailability_nonDim are the
      same.
    type: object
    required: ['provider', 'cellCoveragePolygons','cellCoverageDeadZonePolygons']
    properties:
      provider:
        description: >-
          The provider of service described by the associated polygons.
        type: string
        minLength: 3
        maxLength: 30
      cellCoveragePolygons:
        description: >-
          list cell Coverage Polygons
        type: array
        minItems: 1
        maxItems: 300
        items:
          $ref: 'https://raw.githubusercontent.com/nasa/utm-apis/master/utm-domains/utm-domain-geojson.yaml#/definitions/Polygon'
      cellCoverageDeadZonePolygons:
        description: >-
          list cell Coverage Dead Zone Polygons
        type: array
        minItems: 1
        maxItems: 300
        items:
          $ref: 'https://raw.githubusercontent.com/nasa/utm-apis/master/utm-domains/utm-domain-geojson.yaml#/definitions/Polygon'

