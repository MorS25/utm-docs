info:
  version: "v1.0"
  title: UTM DMP TCL4 FET
  description: Data model for FET submission.
  contact:
    name: 'NASA Ames Research Center, Aviation Systems Division'
    url: 'https://utmregistry.arc.nasa.gov/'
    email: abraham.k.ishihara@nasa.gov
  license:
    name: NASA Open Source Agreement
    url: 'https://ti.arc.nasa.gov/opensource/nosa/'
  termsOfService: >-
    A. No Warranty: THE SUBJECT SOFTWARE IS PROVIDED \"AS IS\" WITHOUT ANY
    WARRANTY OF ANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING,
    BUT NOT LIMITED TO, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL CONFORM TO
    SPECIFICATIONS, ANY IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
    PARTICULAR PURPOSE, OR FREEDOM FROM INFRINGEMENT, ANY WARRANTY THAT THE
    SUBJECT SOFTWARE WILL BE ERROR FREE, OR ANY WARRANTY THAT DOCUMENTATION, IF
    PROVIDED, WILL CONFORM TO THE SUBJECT SOFTWARE. THIS AGREEMENT DOES NOT, IN
    ANY MANNER, CONSTITUTE AN ENDORSEMENT BY GOVERNMENT AGENCY OR ANY PRIOR
    RECIPIENT OF ANY RESULTS, RESULTING DESIGNS, HARDWARE, SOFTWARE PRODUCTS OR
    ANY OTHER APPLICATIONS RESULTING FROM USE OF THE SUBJECT SOFTWARE. FURTHER,
    GOVERNMENT AGENCY DISCLAIMS ALL WARRANTIES AND LIABILITIES REGARDING
    THIRD-PARTY SOFTWARE, IF PRESENT IN THE ORIGINAL SOFTWARE, AND DISTRIBUTES
    IT \"AS IS.\"


    B. Waiver and Indemnity: RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS
    AGAINST THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS
    WELL AS ANY PRIOR RECIPIENT. IF RECIPIENT''S USE OF THE SUBJECT SOFTWARE
    RESULTS IN ANY LIABILITIES, DEMANDS, DAMAGES, EXPENSES OR LOSSES ARISING
    FROM SUCH USE, INCLUDING ANY DAMAGES FROM PRODUCTS BASED ON, OR RESULTING
    FROM, RECIPIENT''S USE OF THE SUBJECT SOFTWARE, RECIPIENT SHALL INDEMNIFY
    AND HOLD HARMLESS THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND
    SUBCONTRACTORS, AS WELL AS ANY PRIOR RECIPIENT, TO THE EXTENT PERMITTED BY
    LAW. RECIPIENT''S SOLE REMEDY FOR ANY SUCH MATTER SHALL BE THE IMMEDIATE,
    UNILATERAL TERMINATION OF THIS AGREEMENT.

swagger: '2.0'

paths:
  '/no-paths':
    put:
      responses:
        '410':
          description: >-
            Gone. Not implemented. Will not be implemented. Path included for
            proper use by automated tooling.  Tools sometimes do not like
            when there are no paths, but domains do not contain paths.

definitions:

  FlightEssentialTelemetryAndUasStates:
    description: >-
      Flight essential telemetry and UAS state data.
      Use this model for both UAS and crewed vehicles.
      List of required elements below:

      *ALL* enums are required for UA (see SensorList).
      Provide "MOTOR_#_CONTROL_THROTTLE_COMMAND_NONDIM" for each motor on UA (where "#" is the motor number ranging from 1 to 16)

      Required enums to submit for Crewed (see SensorList):
        - LAT
        - LON
        - ALT
        - HEADING_DEG
        - HDOP_NONDIM
        - VDOP_NONDIM
        - NUM_GPS_SATELLITES_IN_VIEW_NONDIM
        - NUM_GPS_SAT_NONDIM
        - GROUND_COURSE_DEG
        - GROUND_SPEED_FT_PER_SEC

      Refer to DMP for more details.

    required:
      - metaData
      - sensorTuple
    properties:
      metaData:
        $ref: 'https://raw.githubusercontent.com/nasa/utm-docs/master/TCL4%20Data%20Management/utm-tcl4-dmp-common.yaml#/definitions/metaData'
      sensorTuple:
        description: >-
          An individual sensor sample: timestamp, sensor, & value
        type: array
        items:
          $ref: '#/definitions/SensorTuple'
        minItems: 1
        maxItems: 10000

  SensorTuple:
    description: >-
      An individual sample of a sensor.  See DMP spreadsheet for definitions of
      the various enum values.

      Each sensor will have its own requirements on sample frequency.

      NOTE: If 'sensor' = "AIRCRAFT_AIRBORNE_STATE_NONDIM" then 'value' = 0 or 1
      0 = on ground
      1 = in air
      Report at least 1 Hz frequency.
    required:
      - timestamp
      - sensor
      - value
    properties:
      timestamp:
        description: >-
          Time for this sample.
        type: string
        format: date-time
        minLength: 24
        maxLength: 24
        pattern: "^([0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]{3})Z$"
        example: '2015-08-20T14:11:56.118Z'
      value:
        type: number
        format: double
        description: >-
          Value of sensor reading.
      sensor:
        description: >-
          Refer to DMP for individual definitions and units of each of these sensors.
        $ref: 'https://raw.githubusercontent.com/nasa/utm-docs/master/TCL4%20Data%20Management/utm-tcl4-dmp-common.yaml#/definitions/SensorList'

  MetaDataCallSignRunTsSensor:
    description: >-
      Data model used to delete a fet instance.
    required:
      - metaDataCallSignRun
      - sensor_double
    properties:
      metaDataCallSignRun:
        $ref: 'https://raw.githubusercontent.com/nasa/utm-docs/master/TCL4%20Data%20Management/utm-tcl4-dmp-common.yaml#/definitions/MetaDataCallSignRun'
      sensor_double:
        description: >-
          An array of SensorDouble models to delete.
        type: array
        items:
          $ref: '#/definitions/SensorDouble'
        minItems: 1
        maxItems: 10000

  SensorDouble:
    description: >-
      An array of models to delete.
    required:
      - timestamp
      - sensor
    properties:
      timestamp:
        description: >-
          Time for this sample.
        type: string
        format: date-time
        minLength: 24
        maxLength: 24
        pattern: "^([0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]{3})Z$"
        example: '2015-08-20T14:11:56.118Z'
      sensor:
        $ref: 'https://raw.githubusercontent.com/nasa/utm-docs/master/TCL4%20Data%20Management/utm-tcl4-dmp-common.yaml#/definitions/SensorList'
