info:
  version: "v1.0"
  title: UTM DMP TCL4 DAA
  description: Data model for CNS submission.
  contact:
    name: 'NASA Ames Research Center, Aviation Systems Division'
    url: 'https://utmregistry.arc.nasa.gov/'
    email: marcus.johnson@nasa.gov
  license:
    name: NASA Open Source Agreement
    url: 'https://ti.arc.nasa.gov/opensource/nosa/'
  termsOfService: >-
    A. No Warranty: THE SUBJECT SOFTWARE IS PROVIDED \"AS IS\" WITHOUT ANY
    WARRANTY OF ANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING,
    BUT NOT LIMITED TO, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL CONFORM TO
    SPECIFICATIONS, ANY IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
    PARTICULAR PURPOSE, OR FREEDOM FROM INFRINGEMENT, ANY WARRANTY THAT THE
    SUBJECT SOFTWARE WILL BE ERROR FREE, OR ANY WARRANTY THAT DOCUMENTATION, IF
    PROVIDED, WILL CONFORM TO THE SUBJECT SOFTWARE. THIS AGREEMENT DOES NOT, IN
    ANY MANNER, CONSTITUTE AN ENDORSEMENT BY GOVERNMENT AGENCY OR ANY PRIOR
    RECIPIENT OF ANY RESULTS, RESULTING DESIGNS, HARDWARE, SOFTWARE PRODUCTS OR
    ANY OTHER APPLICATIONS RESULTING FROM USE OF THE SUBJECT SOFTWARE. FURTHER,
    GOVERNMENT AGENCY DISCLAIMS ALL WARRANTIES AND LIABILITIES REGARDING
    THIRD-PARTY SOFTWARE, IF PRESENT IN THE ORIGINAL SOFTWARE, AND DISTRIBUTES
    IT \"AS IS.\"


    B. Waiver and Indemnity: RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS
    AGAINST THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS
    WELL AS ANY PRIOR RECIPIENT. IF RECIPIENT''S USE OF THE SUBJECT SOFTWARE
    RESULTS IN ANY LIABILITIES, DEMANDS, DAMAGES, EXPENSES OR LOSSES ARISING
    FROM SUCH USE, INCLUDING ANY DAMAGES FROM PRODUCTS BASED ON, OR RESULTING
    FROM, RECIPIENT''S USE OF THE SUBJECT SOFTWARE, RECIPIENT SHALL INDEMNIFY
    AND HOLD HARMLESS THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND
    SUBCONTRACTORS, AS WELL AS ANY PRIOR RECIPIENT, TO THE EXTENT PERMITTED BY
    LAW. RECIPIENT''S SOLE REMEDY FOR ANY SUCH MATTER SHALL BE THE IMMEDIATE,
    UNILATERAL TERMINATION OF THIS AGREEMENT.

swagger: '2.0'

paths:
  '/no-paths':
    put:
      responses:
        '410':
          description: >-
            Gone. Not implemented. Will not be implemented. Path included for
            proper use by automated tooling.  Tools sometimes do not like
            when there are no paths, but domains do not contain paths.

definitions:
  DaaSensor:
    type: object
    required:
      - metaData
      - daaSensor
      - sensorId
      - useOfSensor
      - typeOfSensor
      - otherSensor
      - probabilityIntruderDetectionPrct
      - targetTrackCapacity
      - updateRateSensor

    properties:
      metaData:
        $ref: 'https://raw.githubusercontent.com/nasa/utm-docs/master/TCL4%20Data%20Management/utm-tcl4-dmp-common.yaml#/definitions/metaData'
      sensorId:
        $ref: "#/definitions/SensorId"
      useOfSensor:
        type: string
        enum: [DAA,OA,CA]
      typeOfSensor:
        type: string
        enum: [USS Service, DSRC, C-2V2X, Wifi, ADS-B, Airborne Radar, Ground Radar, LiDAR, Acoustic, Optical, EO/IR, other]
      otherSensor:
        type: string
      probabilityIntruderDetectionPrct:
        $ref: "#/definitions/percent"      
      targetTrackCapacity:
        $ref: "#/definitions/count"
      updateRateSensor:
        $ref: "#/definitions/hertz"


  DaaSensorRange:
    required:
      - metaData
    properties:
      metaData:
        $ref: 'https://raw.githubusercontent.com/nasa/utm-docs/master/TCL4%20Data%20Management/utm-tcl4-dmp-common.yaml#/definitions/metaData'
      sensorId:
        $ref: "#/definitions/SensorId"
      sensorMaxHorzRangeData:
        $ref: "#/definitions/feet"
      sensorMinHorzRangeData:
        $ref: "#/definitions/feet"
      horRangeAccuracy_ft:
        $ref: "#/definitions/degrees"      
      sensorMaxVertRangeData:
        $ref: "#/definitions/feet"
      sensorMinVertRangeData:
        $ref: "#/definitions/feet"
      verRangeAccuracy_ft:
        $ref: "#/definitions/feet"

  DaaSensorBearing:
    required:
      - metaData
      - sensorId
      - azimuthSensorMax
      - azimuthSensorMin
      - daaSensorAzimuthAccuracy
      - elevationSensorMax
      - elevationSensorMin
      - daaSensorAltitudeAccuracy
    properties:
      metaData:
        $ref: 'https://raw.githubusercontent.com/nasa/utm-docs/master/TCL4%20Data%20Management/utm-tcl4-dmp-common.yaml#/definitions/metaData'
      sensorId:
        $ref: "#/definitions/SensorId"
      azimuthSensorMax:
        $ref: "#/definitions/degrees"
      azimuthSensorMin:
        $ref: "#/definitions/degrees"
      daaSensorAzimuthAccuracy:
        $ref: "#/definitions/degrees"        
      elevationSensorMax:
        $ref: "#/definitions/degrees"        
      elevationSensorMin:
        $ref: "#/definitions/degrees"
      daaSensorAltitudeAccuracy:
        $ref: "#/definitions/feet"

  DaaSensorRcs: 
    required:
      - metaData
      - sensorId
    properties:
      metaData:
        $ref: 'https://raw.githubusercontent.com/nasa/utm-docs/master/TCL4%20Data%20Management/utm-tcl4-dmp-common.yaml#/definitions/metaData'
      sensorId:
        $ref: "#/definitions/SensorId"
      maxRcsOfSensor_ft2:
        $ref: "#/definitions/squareFoot"      
      minRcsOfSensor_ft2:
        $ref: "#/definitions/squareFoot"          

  DaaSensorV2V: 
    required:
      - metaData
      - sensorId
      - txRadioFrequencyV2V
      - txRadioFrequencyPowerEirpV2V
      - txRadioFrequencyPowerErpV2V
    properties:
      metaData:
        $ref: 'https://raw.githubusercontent.com/nasa/utm-docs/master/TCL4%20Data%20Management/utm-tcl4-dmp-common.yaml#/definitions/metaData'
      sensorId:
        $ref: "#/definitions/SensorId"
      txRadioFrequencyV2V:
        $ref: "#/definitions/gigaHertz"
      txRadioFrequencyPowerEirpV2V:
        $ref: "#/definitions/watt"
      txRadioFrequencyPowerErpV2V:
        $ref: "#/definitions/watt"      

  ConflictResolutionConfiguration:
    required:
      - metaData
      - lookAheadTime
      - expectedOperatorResponseTime
      - expectedUASResponseTime
      - expectedCommLatency
      - expectedClimbRateOwnship
      - expectedDescendRateOwnship
      - expectedTurnRateOwnship
      - expectedTimeToHover
      - probabilityFalseAlarmPrct
      - staticObstacleTable
    properties: 
      metaData:
        $ref: 'https://raw.githubusercontent.com/nasa/utm-docs/master/TCL4%20Data%20Management/utm-tcl4-dmp-common.yaml#/definitions/metaData'
      lookAheadTime:
        $ref: "#/definitions/seconds"
      expectedOperatorResponseTime:
        $ref: "#/definitions/seconds"
      expectedUASResponseTime:
        $ref: "#/definitions/seconds"
      expectedCommLatency:
        $ref: "#/definitions/seconds"
      expectedClimbRateOwnship:
        $ref: "#/definitions/seconds"
      expectedDescendRateOwnship:
        $ref: "#/definitions/seconds"
      expectedTurnRateOwnship:
        $ref: "#/definitions/seconds"
      expectedTimeToHover:
        $ref: "#/definitions/seconds"
      probabilityFalseAlarmPrct:
        $ref: "#/definitions/percent" 
        
      # staticObstaclePolygonPoint
      # staticObstacleMaxAlt_ft
      # staticObstacleMinAlt_ft
      staticObstacleTable:
        type: array
        items:
          type: object
          properties:
            polygonBoundary:
              $ref: "#/definitions/PolygonBoundary"
              

  DaaSensorAzimuthAccuracy:
    required:
      - metaData
      - sensorId
      - timestamp
      - daaSensorAzimuthAccuracyRealTime
      - daaSensorAltitudeAccuracyRealTime
    properties:
      metaData:
        $ref: 'https://raw.githubusercontent.com/nasa/utm-docs/master/TCL4%20Data%20Management/utm-tcl4-dmp-common.yaml#/definitions/metaData'
      sensorId:
        $ref: "#/definitions/SensorId"
      timestamp:
        $ref: 'https://raw.githubusercontent.com/nasa/utm-docs/master/TCL4%20Data%20Management/utm-tcl4-dmp-common.yaml#/definitions/timestamp'
      daaSensorAzimuthAccuracyRealTime:
        $ref: '#/definitions/degrees'
      daaSensorAltitudeAccuracyRealTime:
        $ref: '#/definitions/degrees'

  DaaSensorRangeAccuracy:
    required:
      - metaData
      - sensorId
      - timestamp
    properties:
      metaData:
        $ref: 'https://raw.githubusercontent.com/nasa/utm-docs/master/TCL4%20Data%20Management/utm-tcl4-dmp-common.yaml#/definitions/metaData'
      sensorId:
        $ref: "#/definitions/SensorId"
      timestamp:
        $ref: 'https://raw.githubusercontent.com/nasa/utm-docs/master/TCL4%20Data%20Management/utm-tcl4-dmp-common.yaml#/definitions/timestamp'
      horRangeAccuracyRealTime:
        $ref: '#/definitions/feet'
      verRangeAccuracyRealTime:
        $ref: '#/definitions/feet'

  DaaSensorV2vData:
    required:
      - metaData
      - sensorId
      - timestamp
      - dataPacketRatioV2v
      - transmissionDelayV2v
      - packetSizeV2v
    properties:
      metaData:
        $ref: 'https://raw.githubusercontent.com/nasa/utm-docs/master/TCL4%20Data%20Management/utm-tcl4-dmp-common.yaml#/definitions/metaData'
      sensorId:
        $ref: "#/definitions/SensorId"
      timestamp:
        $ref: 'https://raw.githubusercontent.com/nasa/utm-docs/master/TCL4%20Data%20Management/utm-tcl4-dmp-common.yaml#/definitions/timestamp'
      dataPacketRatioV2v:
        $ref: '#/definitions/ratio'
      transmissionDelayV2v:
        $ref: "#/definitions/seconds"
      packetSizeV2v:
        $ref: '#/definitions/kiloBytes'

  DaaSensorNumberOfLostTracks:
    required:
      - metaData
      - sensorId
      - timestamp
      - numberOfLostTracks
    properties:
      metaData:
        $ref: 'https://raw.githubusercontent.com/nasa/utm-docs/master/TCL4%20Data%20Management/utm-tcl4-dmp-common.yaml#/definitions/metaData'
      sensorId:
        $ref: "#/definitions/SensorId"
      timestamp:
        $ref: 'https://raw.githubusercontent.com/nasa/utm-docs/master/TCL4%20Data%20Management/utm-tcl4-dmp-common.yaml#/definitions/timestamp'
      numberOfLostTracks:
        $ref: '#/definitions/count'
        
        
# supporting definitions
  SensorId: 
    description: >-
      Identifier for this sensor instance.  
    type: string
    format: uuid
    maxLength: 36
    minLength: 36
    pattern: "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-4[0-9a-fA-F]{3}\\-[8-b][0-9a-fA-F]{3}\\-[0-9a-fA-F]{12}$"
    example: "00000000-0000-4444-8888-FEEDDEADBEEF"

  seconds:
    type: number
    format: integer
    
  degrees:
    type: number
    format: float
  
  feet:
    type: number
    format: float
    
  squareFoot:
    type: number
    format: float
    
  hertz:
    type: number
    format: float
    
  gigaHertz:
    type: number
    format: float
    
  percent:
    type: number
    format: float
    
  count:
    type: number
    format: integer
    
  watt:
    type: number
    format: float
    
  ratio:
    type: number
    format: float
    
  kiloBytes:
    type: number
    format: float
 
  PolygonBoundary:
    type: object
    required: [min,max,polygonPoints]
    properties:
      min: 
        type: number
        format: float
      max:
        type: number
        format: float
      polygonPoints:
        type: array
        items:
          $ref: "#/definitions/LatLon"
  LatLon:
    type: object
    required: [lat,lon]
    properties:
      lat:
        type: number
        format: double
      lon:
        type: number
        format: double
