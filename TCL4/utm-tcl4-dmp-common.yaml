info:
  version: "v1"
  title: UTM DMP TCL4 Flight Data Specification
  description: Data model for flight data submission. 
  contact:
    name: 'NASA Ames Research Center, Aviation Systems Division'
    url: 'https://utmregistry.arc.nasa.gov/'
    email: joseph.rios@nasa.gov
  license:
    name: NASA Open Source Agreement
    url: 'https://ti.arc.nasa.gov/opensource/nosa/'
  termsOfService: >-
    A. No Warranty: THE SUBJECT SOFTWARE IS PROVIDED \"AS IS\" WITHOUT ANY
    WARRANTY OF ANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING,
    BUT NOT LIMITED TO, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL CONFORM TO
    SPECIFICATIONS, ANY IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
    PARTICULAR PURPOSE, OR FREEDOM FROM INFRINGEMENT, ANY WARRANTY THAT THE
    SUBJECT SOFTWARE WILL BE ERROR FREE, OR ANY WARRANTY THAT DOCUMENTATION, IF
    PROVIDED, WILL CONFORM TO THE SUBJECT SOFTWARE. THIS AGREEMENT DOES NOT, IN
    ANY MANNER, CONSTITUTE AN ENDORSEMENT BY GOVERNMENT AGENCY OR ANY PRIOR
    RECIPIENT OF ANY RESULTS, RESULTING DESIGNS, HARDWARE, SOFTWARE PRODUCTS OR
    ANY OTHER APPLICATIONS RESULTING FROM USE OF THE SUBJECT SOFTWARE. FURTHER,
    GOVERNMENT AGENCY DISCLAIMS ALL WARRANTIES AND LIABILITIES REGARDING
    THIRD-PARTY SOFTWARE, IF PRESENT IN THE ORIGINAL SOFTWARE, AND DISTRIBUTES
    IT \"AS IS.\"


    B. Waiver and Indemnity: RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS
    AGAINST THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS
    WELL AS ANY PRIOR RECIPIENT. IF RECIPIENT''S USE OF THE SUBJECT SOFTWARE
    RESULTS IN ANY LIABILITIES, DEMANDS, DAMAGES, EXPENSES OR LOSSES ARISING
    FROM SUCH USE, INCLUDING ANY DAMAGES FROM PRODUCTS BASED ON, OR RESULTING
    FROM, RECIPIENT''S USE OF THE SUBJECT SOFTWARE, RECIPIENT SHALL INDEMNIFY
    AND HOLD HARMLESS THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND
    SUBCONTRACTORS, AS WELL AS ANY PRIOR RECIPIENT, TO THE EXTENT PERMITTED BY
    LAW. RECIPIENT''S SOLE REMEDY FOR ANY SUCH MATTER SHALL BE THE IMMEDIATE,
    UNILATERAL TERMINATION OF THIS AGREEMENT.

definitions:
  metaData:
    type: object
    required: ['test_card','run','call_sign','uvin','gufi','submitTime','ussName']
    properties:
      uvin:
        $ref: '#/definitions/UUID'
      gufi:
        description: >-
          GUFI of the operation that is the source of these data. Note that this
          GUFI is repeated in the Position model, so they must match.  In addition
          this GUFI will map to operational data in the UTM data stores.  Thus
          the values for call_sign, test_card, test_run must match the metadata
          supplied with that Operation's metadata.  Mismatches will cause the
          data submission to be rejected.
        type: string
        format: uuid
        maxLength: 36
        minLength: 36
        pattern: "^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-4[0-9a-fA-F]{3}\\-[8-b][0-9a-fA-F]{3}\\-[0-9a-fA-F]{12}$"
        example: "00000000-0000-4444-8888-FEEDDEADBEEF"
      submitTime:
        $ref: '#/definitions/timestamp'
      ussName:
        type: string
        description: This is a unique string that identifies the USS that is supporting this operation.  It is the same identifier used in the basic authentication mechanism required to obtain a token from FIMS (Flight Information Management System).  It is also the subject claim that identifies the principal that is the subject of the JWT.
      test_card:
        description: >-
          The official test card bstring.  The test cards or test card identifiers will be provided by NASA.  They will be unique across the UTM TCL4 campaign.  
        type: string
        maxLength: 100
        example: "NVS1C3"
      run:
        description: >-
          The run of this test card.  Many test cards will be run once, but
          many may have several runs for various reasons, planned and unplanned.
        type: integer
        format: int32
        example: 3
      call_sign:
        description: >-
          Within the test card, this operation should have a unique
          call_sign.  This value must be provided here.
        type: string
        maxLength: 100
        example: "Tootsie88"

  timestamp:
    description: >-
      Timestamps MUST follow the guidance set forth in RFC3339.
      This RFC defines a profile for ISO8601 forcused on interoperability of Internet
      based systems.  This profile makes certain design decisions based on
      reducing rarely used options, elimination of redundant information, and
      overall simplicity.
      From these goals and insight from building interoperable systems,
      RFC3339 provides a grammar for timestamps.  Please see
      https://tools.ietf.org/html/rfc3339#section-5.6
      for that grammer and the sections preceding that grammar for more
      detailed discussion.
      For UTM, we have attempted to reduce the grammar to a regular expression,
      but this does not take into account all rules.  For example, a valid
      timestamp should not allow 30 days in February, but this is not in the
      regular expression.  Likewise, leap years are not captured in the
      regular expression.  Thus it is possible for a timestamp to satisfy this
      RE, but still not be valid and, thus, be rejected by some components of
      UTM.
      Note that this UTM format specifies millisecond precision for all
      time stamps.  This is why the min and max length are fixed at 24.
      Note that this UTM format specifies UTC time indicated by a trailing 'Z'.
      Note that this UTM format specifies date and time separation with a 'T'.
    type: "string"
    format: "iso8601"
    minLength: 24
    maxLength: 24
    pattern: "^([0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]{3})Z$"
    example: "2015-08-20T14:11:56.118Z"
    
  UUID:
    type: string
    format: uuid
    pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
    example: 'd7126818-d280-475f-aaee-c16e9c6f04e0'
    maxLength: 36
    minLength: 36
